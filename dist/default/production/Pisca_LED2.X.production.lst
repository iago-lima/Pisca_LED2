

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 23 14:18:42 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTD	set	3971
    50  0000                     _TRISD	set	3989
    51  0000                     _OSCCON	set	4051
    52  0000                     _T0CONbits	set	4053
    53  0000                     _PORTDbits	set	3971
    54  0000                     _TMR0L	set	4054
    55  0000                     _TMR0H	set	4055
    56  0000                     _INTCONbits	set	4082
    57                           
    58                           ; #config settings
    59  0000                     
    60                           	psect	cinit
    61  000136                     __pcinit:
    62                           	opt stack 0
    63  000136                     start_initialization:
    64                           	opt stack 0
    65  000136                     __initialization:
    66                           	opt stack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (2 bytes)
    69  000136  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
    70  000138  6A17               	clrf	__pbssCOMRAM& (0+255),c
    71  00013A                     end_of_initialization:
    72                           	opt stack 0
    73  00013A                     __end_of__initialization:
    74                           	opt stack 0
    75  00013A  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    76  00013C  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    77  00013E  0100               	movlb	0
    78  000140  EF86  F000         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	bssCOMRAM
    81  000017                     __pbssCOMRAM:
    82                           	opt stack 0
    83  000017                     _i:
    84                           	opt stack 0
    85  000017                     	ds	2
    86                           
    87                           	psect	cstackCOMRAM
    88  000001                     __pcstackCOMRAM:
    89                           	opt stack 0
    90  000001                     ??_ISR:
    91  000001                     
    92                           ; 1 bytes @ 0x0
    93  000001                     	ds	17
    94  000012                     atraso_ms@valor:
    95                           	opt stack 0
    96                           
    97                           ; 2 bytes @ 0x11
    98  000012                     	ds	2
    99  000014                     atraso_ms@ii:
   100                           	opt stack 0
   101                           
   102                           ; 2 bytes @ 0x13
   103  000014                     	ds	2
   104  000016                     atraso_ms@j:
   105                           	opt stack 0
   106                           
   107                           ; 1 bytes @ 0x15
   108  000016                     	ds	1
   109  000017                     
   110                           ; 1 bytes @ 0x16
   111 ;;
   112 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   113 ;;
   114 ;; *************** function _main *****************
   115 ;; Defined at:
   116 ;;		line 134 in file "main.c"
   117 ;; Parameters:    Size  Location     Type
   118 ;;		None
   119 ;; Auto vars:     Size  Location     Type
   120 ;;		None
   121 ;; Return value:  Size  Location     Type
   122 ;;                  1    wreg      void 
   123 ;; Registers used:
   124 ;;		wreg, status,2, status,0, cstack
   125 ;; Tracked objects:
   126 ;;		On entry : 0/0
   127 ;;		On exit  : 0/0
   128 ;;		Unchanged: 0/0
   129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   130 ;;      Params:         0       0       0       0       0       0       0       0       0
   131 ;;      Locals:         0       0       0       0       0       0       0       0       0
   132 ;;      Temps:          0       0       0       0       0       0       0       0       0
   133 ;;      Totals:         0       0       0       0       0       0       0       0       0
   134 ;;Total ram usage:        0 bytes
   135 ;; Hardware stack levels required when called:    2
   136 ;; This function calls:
   137 ;;		_atraso_ms
   138 ;; This function is called by:
   139 ;;		Startup code after reset
   140 ;; This function uses a non-reentrant model
   141 ;;
   142                           
   143                           	psect	text0
   144  00010C                     __ptext0:
   145                           	opt stack 0
   146  00010C                     _main:
   147                           	opt stack 29
   148                           
   149                           ;main.c: 135: OSCCON = 0x72;
   150                           
   151                           ;incstack = 0
   152  00010C  0E72               	movlw	114
   153  00010E  6ED3               	movwf	4051,c	;volatile
   154                           
   155                           ;main.c: 136: TRISD=0x00;
   156  000110  0E00               	movlw	0
   157  000112  6E95               	movwf	3989,c	;volatile
   158                           
   159                           ;main.c: 137: PORTD = 0x00;
   160  000114  0E00               	movlw	0
   161  000116  6E83               	movwf	3971,c	;volatile
   162  000118                     l718:
   163                           
   164                           ;main.c: 141: PORTDbits.RD1=1;
   165  000118  8283               	bsf	3971,1,c	;volatile
   166                           
   167                           ;main.c: 142: atraso_ms(500);
   168  00011A  0E01               	movlw	1
   169  00011C  6E13               	movwf	atraso_ms@valor+1,c
   170  00011E  0EF4               	movlw	244
   171  000120  6E12               	movwf	atraso_ms@valor,c
   172  000122  EC6B  F000         	call	_atraso_ms	;wreg free
   173                           
   174                           ;main.c: 143: PORTDbits.RD1=0;
   175  000126  9283               	bcf	3971,1,c	;volatile
   176                           
   177                           ;main.c: 144: atraso_ms(500);
   178  000128  0E01               	movlw	1
   179  00012A  6E13               	movwf	atraso_ms@valor+1,c
   180  00012C  0EF4               	movlw	244
   181  00012E  6E12               	movwf	atraso_ms@valor,c
   182  000130  EC6B  F000         	call	_atraso_ms	;wreg free
   183  000134  D7F1               	goto	l718
   184  000136                     __end_of_main:
   185                           	opt stack 0
   186                           
   187 ;; *************** function _atraso_ms *****************
   188 ;; Defined at:
   189 ;;		line 75 in file "main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;  valor           2   17[COMRAM] unsigned int 
   192 ;; Auto vars:     Size  Location     Type
   193 ;;  ii              2   19[COMRAM] unsigned int 
   194 ;;  j               1   21[COMRAM] unsigned char 
   195 ;; Return value:  Size  Location     Type
   196 ;;                  1    wreg      void 
   197 ;; Registers used:
   198 ;;		wreg, status,2, status,0
   199 ;; Tracked objects:
   200 ;;		On entry : 0/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   204 ;;      Params:         2       0       0       0       0       0       0       0       0
   205 ;;      Locals:         3       0       0       0       0       0       0       0       0
   206 ;;      Temps:          0       0       0       0       0       0       0       0       0
   207 ;;      Totals:         5       0       0       0       0       0       0       0       0
   208 ;;Total ram usage:        5 bytes
   209 ;; Hardware stack levels used:    1
   210 ;; Hardware stack levels required when called:    1
   211 ;; This function calls:
   212 ;;		Nothing
   213 ;; This function is called by:
   214 ;;		_main
   215 ;; This function uses a non-reentrant model
   216 ;;
   217                           
   218                           	psect	text1
   219  0000D6                     __ptext1:
   220                           	opt stack 0
   221  0000D6                     _atraso_ms:
   222                           	opt stack 29
   223                           
   224                           ;main.c: 76: unsigned int ii;
   225                           ;main.c: 77: unsigned char j;
   226                           ;main.c: 79: for (ii =0; ii< valor; ii++)
   227                           
   228                           ;incstack = 0
   229  0000D6  0E00               	movlw	0
   230  0000D8  6E15               	movwf	atraso_ms@ii+1,c
   231  0000DA  0E00               	movlw	0
   232  0000DC  6E14               	movwf	atraso_ms@ii,c
   233  0000DE  D00F               	goto	l714
   234  0000E0                     l702:
   235                           
   236                           ;main.c: 80: {
   237                           ;main.c: 82: for (j =0 ; j < 200; j++)
   238  0000E0  0E00               	movlw	0
   239  0000E2  6E16               	movwf	atraso_ms@j,c
   240  0000E4                     l704:
   241  0000E4  0EC7               	movlw	199
   242  0000E6  6416               	cpfsgt	atraso_ms@j,c
   243  0000E8  D001               	goto	l23
   244  0000EA  D007               	goto	l712
   245  0000EC                     l23:
   246  0000EC  F000               	nop		;# 
   247  0000EE  F000               	nop		;# 
   248  0000F0  F000               	nop		;# 
   249  0000F2  F000               	nop		;# 
   250  0000F4  F000               	nop		;# 
   251  0000F6  2A16               	incf	atraso_ms@j,f,c
   252  0000F8  D7F5               	goto	l704
   253  0000FA                     l712:
   254  0000FA  4A14               	infsnz	atraso_ms@ii,f,c
   255  0000FC  2A15               	incf	atraso_ms@ii+1,f,c
   256  0000FE                     l714:
   257  0000FE  5012               	movf	atraso_ms@valor,w,c
   258  000100  5C14               	subwf	atraso_ms@ii,w,c
   259  000102  5013               	movf	atraso_ms@valor+1,w,c
   260  000104  5815               	subwfb	atraso_ms@ii+1,w,c
   261  000106  B0D8               	btfsc	status,0,c
   262  000108  0012               	return	
   263  00010A  D7EA               	goto	l702
   264  00010C                     __end_of_atraso_ms:
   265                           	opt stack 0
   266                           status	equ	0xFD8
   267                           
   268 ;; *************** function _ISR *****************
   269 ;; Defined at:
   270 ;;		line 95 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   284 ;;      Params:         0       0       0       0       0       0       0       0       0
   285 ;;      Locals:         0       0       0       0       0       0       0       0       0
   286 ;;      Temps:         17       0       0       0       0       0       0       0       0
   287 ;;      Totals:        17       0       0       0       0       0       0       0       0
   288 ;;Total ram usage:       17 bytes
   289 ;; Hardware stack levels used:    1
   290 ;; This function calls:
   291 ;;		Nothing
   292 ;; This function is called by:
   293 ;;		Interrupt level 1
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	intcodelo
   298  000018                     __pintcodelo:
   299                           	opt stack 0
   300  000018                     _ISR:
   301                           	opt stack 29
   302                           
   303                           ;incstack = 0
   304  000018  8019               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   305  00001A  CFD8 F001          	movff	status,??_ISR
   306  00001E  CFE8 F002          	movff	wreg,??_ISR+1
   307  000022  CFE0 F003          	movff	bsr,??_ISR+2
   308  000026  CFFA F004          	movff	pclath,??_ISR+3
   309  00002A  CFFB F005          	movff	pclatu,??_ISR+4
   310  00002E  CFE9 F006          	movff	fsr0l,??_ISR+5
   311  000032  CFEA F007          	movff	fsr0h,??_ISR+6
   312  000036  CFE1 F008          	movff	fsr1l,??_ISR+7
   313  00003A  CFE2 F009          	movff	fsr1h,??_ISR+8
   314  00003E  CFD9 F00A          	movff	fsr2l,??_ISR+9
   315  000042  CFDA F00B          	movff	fsr2h,??_ISR+10
   316  000046  CFF3 F00C          	movff	prodl,??_ISR+11
   317  00004A  CFF4 F00D          	movff	prodh,??_ISR+12
   318  00004E  CFF6 F00E          	movff	tblptrl,??_ISR+13
   319  000052  CFF7 F00F          	movff	tblptrh,??_ISR+14
   320  000056  CFF8 F010          	movff	tblptru,??_ISR+15
   321  00005A  CFF5 F011          	movff	tablat,??_ISR+16
   322                           
   323                           ;main.c: 96: if(INTCONbits.TMR0IF == 1){
   324  00005E  A4F2               	btfss	intcon,2,c	;volatile
   325  000060  D014               	goto	i1l32
   326                           
   327                           ;main.c: 97: INTCONbits.TMR0IF = 0;
   328  000062  94F2               	bcf	intcon,2,c	;volatile
   329                           
   330                           ;main.c: 99: TMR0H = 0xB;
   331  000064  0E0B               	movlw	11
   332  000066  6ED7               	movwf	4055,c	;volatile
   333                           
   334                           ;main.c: 100: TMR0L = 0xDC;
   335  000068  0EDC               	movlw	220
   336  00006A  6ED6               	movwf	4054,c	;volatile
   337                           
   338                           ;main.c: 102: if(i==0){
   339  00006C  5017               	movf	_i,w,c
   340  00006E  1018               	iorwf	_i+1,w,c
   341  000070  A4D8               	btfss	status,2,c
   342  000072  D006               	goto	i1l672
   343                           
   344                           ;main.c: 103: i=1;
   345  000074  0E00               	movlw	0
   346  000076  6E18               	movwf	_i+1,c
   347  000078  0E01               	movlw	1
   348  00007A  6E17               	movwf	_i,c
   349                           
   350                           ;main.c: 104: PORTDbits.RD1=1;
   351  00007C  8283               	bsf	3971,1,c	;volatile
   352                           
   353                           ;main.c: 105: }else{
   354  00007E  D005               	goto	i1l32
   355  000080                     i1l672:
   356                           
   357                           ;main.c: 106: i=0;
   358  000080  0E00               	movlw	0
   359  000082  6E18               	movwf	_i+1,c
   360  000084  0E00               	movlw	0
   361  000086  6E17               	movwf	_i,c
   362                           
   363                           ;main.c: 107: PORTDbits.RD1=0;
   364  000088  9283               	bcf	3971,1,c	;volatile
   365  00008A                     i1l32:
   366  00008A  C011  FFF5         	movff	??_ISR+16,tablat
   367  00008E  C010  FFF8         	movff	??_ISR+15,tblptru
   368  000092  C00F  FFF7         	movff	??_ISR+14,tblptrh
   369  000096  C00E  FFF6         	movff	??_ISR+13,tblptrl
   370  00009A  C00D  FFF4         	movff	??_ISR+12,prodh
   371  00009E  C00C  FFF3         	movff	??_ISR+11,prodl
   372  0000A2  C00B  FFDA         	movff	??_ISR+10,fsr2h
   373  0000A6  C00A  FFD9         	movff	??_ISR+9,fsr2l
   374  0000AA  C009  FFE2         	movff	??_ISR+8,fsr1h
   375  0000AE  C008  FFE1         	movff	??_ISR+7,fsr1l
   376  0000B2  C007  FFEA         	movff	??_ISR+6,fsr0h
   377  0000B6  C006  FFE9         	movff	??_ISR+5,fsr0l
   378  0000BA  C005  FFFB         	movff	??_ISR+4,pclatu
   379  0000BE  C004  FFFA         	movff	??_ISR+3,pclath
   380  0000C2  C003  FFE0         	movff	??_ISR+2,bsr
   381  0000C6  C002  FFE8         	movff	??_ISR+1,wreg
   382  0000CA  C001  FFD8         	movff	??_ISR,status
   383  0000CE  9019               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   384  0000D0  0010               	retfie	
   385  0000D2                     __end_of_ISR:
   386                           	opt stack 0
   387  0000                     pclatu	equ	0xFFB
   388                           pclath	equ	0xFFA
   389                           tblptru	equ	0xFF8
   390                           tblptrh	equ	0xFF7
   391                           tblptrl	equ	0xFF6
   392                           tablat	equ	0xFF5
   393                           prodh	equ	0xFF4
   394                           prodl	equ	0xFF3
   395                           intcon	equ	0xFF2
   396                           fsr0h	equ	0xFEA
   397                           fsr0l	equ	0xFE9
   398                           wreg	equ	0xFE8
   399                           fsr1h	equ	0xFE2
   400                           fsr1l	equ	0xFE1
   401                           bsr	equ	0xFE0
   402                           fsr2h	equ	0xFDA
   403                           fsr2l	equ	0xFD9
   404                           status	equ	0xFD8
   405                           pclatu	equ	0xFFB
   406                           pclath	equ	0xFFA
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           prodh	equ	0xFF4
   412                           prodl	equ	0xFF3
   413                           intcon	equ	0xFF2
   414                           fsr0h	equ	0xFEA
   415                           fsr0l	equ	0xFE9
   416                           wreg	equ	0xFE8
   417                           fsr1h	equ	0xFE2
   418                           fsr1l	equ	0xFE1
   419                           bsr	equ	0xFE0
   420                           fsr2h	equ	0xFDA
   421                           fsr2l	equ	0xFD9
   422                           status	equ	0xFD8
   423                           
   424                           	psect	rparam
   425  0000                     pclatu	equ	0xFFB
   426                           pclath	equ	0xFFA
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           prodh	equ	0xFF4
   432                           prodl	equ	0xFF3
   433                           intcon	equ	0xFF2
   434                           fsr0h	equ	0xFEA
   435                           fsr0l	equ	0xFE9
   436                           wreg	equ	0xFE8
   437                           fsr1h	equ	0xFE2
   438                           fsr1l	equ	0xFE1
   439                           bsr	equ	0xFE0
   440                           fsr2h	equ	0xFDA
   441                           fsr2l	equ	0xFD9
   442                           status	equ	0xFD8
   443                           
   444                           	psect	temp
   445  000019                     btemp:
   446                           	opt stack 0
   447  000019                     	ds	1
   448  0000                     int$flags	set	btemp
   449                           pclatu	equ	0xFFB
   450                           pclath	equ	0xFFA
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           prodh	equ	0xFF4
   456                           prodl	equ	0xFF3
   457                           intcon	equ	0xFF2
   458                           fsr0h	equ	0xFEA
   459                           fsr0l	equ	0xFE9
   460                           wreg	equ	0xFE8
   461                           fsr1h	equ	0xFE2
   462                           fsr1l	equ	0xFE1
   463                           bsr	equ	0xFE0
   464                           fsr2h	equ	0xFDA
   465                           fsr2l	equ	0xFD9
   466                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_atraso_ms

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     178
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            5     3      2     178
                                             17 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                 17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      18       1       25.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      20        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 23 14:18:42 2017

                      _i 0017                       l23 00EC              __CFG_BOR$ON 000000  
                     bsr 000FE0              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l702 00E0                      l712 00FA                      l704 00E4  
                    l714 00FE                      l718 0118             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _ISR 0018                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     ?_ISR 0001             __CFG_WDT$OFF 000000  
                   i1l32 008A                     _main 010C                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0019  
                   prodh 000FF4                     prodl 000FF3                     start 00D2  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_ISR 0001            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001              atraso_ms@ii 0014                    i1l672 0080  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
        __initialization 0136             __end_of_main 0136                   ??_main 0017  
          __activetblptr 000000                   _OSCCON 000FD3           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 013A  
          ___rparam_used 000001           __pcstackCOMRAM 0001       __size_of_atraso_ms 0036  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
      __end_of_atraso_ms 010C                  __pcinit 0136                  __ramtop 0800  
                __ptext0 010C                  __ptext1 00D6                _T0CONbits 000FD5  
           __size_of_ISR 00BA     end_of_initialization 013A                _PORTDbits 000F83  
             atraso_ms@j 0016      start_initialization 0136              __end_of_ISR 00D2  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0017              __pintcodelo 0018  
              _atraso_ms 00D6           atraso_ms@valor 0012         __CFG_WDTPS$32768 000000  
             ?_atraso_ms 0012                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 002A                 int$flags 0019    __CFG_CPUDIV$OSC2_PLL3 000000  
            ??_atraso_ms 0014               _INTCONbits 000FF2                 intlevel1 0000  
    __CFG_FOSC$INTOSC_HS 000000  
